from openpyxl import load_workbook, Workbook
import os

def add_contacts(file_path, new_contacts):
    # Создаем каталог, если он не существует
    directory = os.path.dirname(file_path)
    if not os.path.exists(directory):
        os.makedirs(directory)

    if os.path.exists(file_path):
        # Загружаем существующий файл
        wb = load_workbook(file_path)
        ws = wb.active
    else:
        # Создаем новый файл и заполняем заголовки
        wb = Workbook()
        ws = wb.active
        ws.title = "Contacts"
        ws.append(["Phone Number", "Contact Name"])

    # Добавляем новые контакты
    for contact in new_contacts:
        ws.append(contact)

    wb.save(file_path)
    print(f"Контакты успешно добавлены в {file_path}")

def delete_contacts(file_path, search_term):
    if not os.path.exists(file_path):
        print(f"Файл {file_path} не существует.")
        return

    wb = load_workbook(file_path)
    ws = wb.active

    # Ищем контакты по номеру телефона или имени
    contacts_to_delete = []
    for row in ws.iter_rows(min_row=2, values_only=True):
        phone_number, contact_name = row
        if search_term in phone_number or search_term in contact_name:
            contacts_to_delete.append((phone_number, contact_name))

    if not contacts_to_delete:
        print("Нет контактов, соответствующих критериям поиска.")
        return

    print("Найдены следующие контакты:")
    for i, contact in enumerate(contacts_to_delete):
        print(f"{i+1}. {contact[0]} - {contact[1]}")

    # Удаляем контакты
    confirm = input("Вы действительно хотите удалить эти контакты? (y/n): ")
    if confirm.lower() == "y":
        for contact in contacts_to_delete:
            for row in ws.iter_rows(min_row=2, values_only=False):
                if row[0].value == contact[0] and row[1].value == contact[1]:
                    ws.delete_rows(row[0].row)
        wb.save(file_path)
        print(f"Контакты успешно удалены из {file_path}")
    else:
        print("Удаление контактов отменено.")

def search_contacts(file_path, search_term):
    if not os.path.exists(file_path):
        print(f"Файл {file_path} не существует.")
        return

    wb = load_workbook(file_path)
    ws = wb.active

    # Ищем контакты по номеру телефона или имени
    contacts_found = []
    for row in ws.iter_rows(min_row=2, values_only=True):
        phone_number, contact_name = row
        if search_term in phone_number or search_term in contact_name:
            contacts_found.append((phone_number, contact_name))

    if not contacts_found:
        print("Нет контактов, соответствующих критериям поиска.")
        return

    print("Найдены следующие контакты:")
    for i, contact in enumerate(contacts_found):
        print(f"{i+1}. {contact[0]} - {contact[1]}")

def edit_contacts():
    file_path = "Files/contacts.xlsx"

    while True:
        print("\nМеню:")
        print("1. Добавить контакт")
        print("2. Удалить контакт")
        print("3. Поиск контактов")
        print("4. Выход")

        choice = input("Выберите действие: ")

        if choice == "1":
            new_contacts = []
            while True:
                phone_number = input("Введите номер телефона (Оставить пустым для завершения): ")
                if not phone_number:
                    break
                contact_name = input("Введите имя контакта: ")
                new_contacts.append([phone_number, contact_name])
            if new_contacts:
                add_contacts(file_path, new_contacts)
            else:
                print("Нет контактов для добавления.")
        elif choice == "2":
            search_term = input("Введите номер телефона или имя контакта для удаления: ")
            delete_contacts(file_path, search_term)
        elif choice == "3":
            search_term = input("Введите номер телефона или имя контакта для поиска: ")
            search_contacts(file_path, search_term)
        elif choice == "4":
            break
        else:
            print("Недопустимый выбор. Пожалуйста, выберите действие из меню.")
            break
