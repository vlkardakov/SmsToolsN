
from openpyxl.styles.builtins import total
from pyexpat.errors import messages
import FreeSimpleGUI as sg
import time

with open("Files/color.txt", "r") as f:
    COLOR = f.read()


# –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É
#sg.theme('DarkAmber')
sg.theme(COLOR)
contacts_file = "Files/contacts.xlsx"  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
output_file = "Files/sms_log.xlsx"


from SmsToolsN import *



def do_continue(text):
    # –ó–∞—Ç–µ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    layout = [
        [sg.Text(text)],
        [sg.Button('–ù–ï–¢'), sg.Button('–î–ê')]
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', layout)

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read()

        if event in (sg.WINDOW_CLOSED, "–ù–ï–¢"):
            window.close()
            return False

        if event == "–î–ê":
            window.close()
            return True

def sets():
    all_themes = sg.theme_list()
    # –ó–∞—Ç–µ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    layout = [
        [sg.Text("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã: "), sg.Combo(all_themes, default_value=sg.theme(), key='theme', enable_events=True)]

    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', layout)

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read()

        if event in (sg.WINDOW_CLOSED, 'theme'):  # –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è —Ç–µ–º–∞
            new_theme = values['theme']
            if new_theme:
                sg.theme(new_theme)
                with open("Files/color.txt", "w") as f:
                    f.write(new_theme)
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å –Ω–æ–≤–æ–π —Ç–µ–º–æ–π
            window.close()
            #menu_main()
            return

def menu_analysing():
    if do_continue("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ? ü§®"):
        analysis()
        err_msg("–£—Å–ø–µ—à–Ω–æ üëå")

def sending(text, nums):
    pass


def menu_contacts():

    def reload_data():
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
        existing = search_contacts("Files/contacts.xlsx", values["args"])[1]

        print(f"–ö–æ–Ω—Ç–∞–∫—Ç—ã = {existing}")

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        contacts_data = []
        if existing:
            for el in existing:
                contacts_data.append([el["name"], el["number"]])
        window["table"].update(values=contacts_data)



    selected_numbers = []
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    existing = search_contacts("Files/contacts.xlsx", "")[1]

    print(f"–ö–æ–Ω—Ç–∞–∫—Ç—ã = {existing}")

    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    headings = ['–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω']



    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    contacts_data = []
    if existing:
        for el in existing:
            contacts_data.append([el["name"], el["number"]])
    total_console = ""

    layout = [
        [sg.Text('–ò–º—è:'), sg.InputText(key='name',size=(34,10)),sg.Button('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', bind_return_key=True)],
        [sg.Text('–¢–µ–ª–µ—Ñ–æ–Ω:'), sg.InputText(key='phone',size=(30,10)), sg.Button('–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ')],
        [sg.Button('–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç'), sg.Button('–û—á–∏—Å—Ç–∏—Ç—å'), sg.Button('–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ'), sg.Button('–ù–∞–ø–∏—Å–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–º')],
        [sg.Text('–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:'), sg.Text('–ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞: '), sg.InputText(key='args',size=(34,10))],
        [sg.Table(values=contacts_data,
                 headings=headings,
                 max_col_width=35,
                 auto_size_columns=True,
                 alternating_row_color="",
                 justification='left',
                 num_rows=10,
                 key='table',
                 enable_events=True,
                 size=(60, 20),
                 select_mode=sg.TABLE_SELECT_MODE_EXTENDED)],
        [sg.Button('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'), sg.Button('–í—ã—Ö–æ–¥')]
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', layout)

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read()
        print(event)
        print(values)

        if event == 'table':  # –∫–æ–≥–¥–∞ –∫–ª–∏–∫–∞–µ–º –ø–æ —Ç–∞–±–ª–∏—Ü–µ
            selected_rows = values['table']
            selected_numbers = []
            for row_index in selected_rows:
                selected_contact = contacts_data[row_index]
                print(f"–í—ã–±—Ä–∞–Ω –∫–æ–Ω—Ç–∞–∫—Ç: –ò–º—è = {selected_contact[0]}, –¢–µ–ª–µ—Ñ–æ–Ω = {selected_contact[1]}")
                selected_numbers.append(selected_contact[1])
                window['name'].update(selected_contact[0])
                window['phone'].update(selected_contact[1])


        if event in (sg.WINDOW_CLOSED, '–í—ã—Ö–æ–¥'):
            break

        if event == "–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ":
            reload_data()
            menu_analysing()

        if event == '–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç':
            if values['name'] and values['phone']:
                add_contacts("Files/contacts.xlsx", [[values["phone"].replace("+7", ""),values["name"]]])
                new_contact = [values['name'], values['phone']]
                contacts_data.append(new_contact)
                window['table'].update(values=contacts_data)

                reload_data()

                print(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç: {new_contact}")
                # –û—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
                window['name'].update('')
                window['phone'].update('')

        if event == '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ':
            reload_data()

        if event == "–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ":
            if selected_numbers and do_continue(f"–£–¥–∞–ª–∏—Ç—å {len(selected_numbers)} –∫–æ–Ω—Ç–∞–∫—Ç–∞?" if len(selected_numbers)%10 < 5 and len(selected_numbers)%10 > 1 else f"–£–¥–∞–ª–∏—Ç—å {len(selected_numbers)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤?"):
                delete_contact(selected_numbers)
                reload_data()
                err_msg("–£—Å–ø–µ—à–Ω–æ.")
            else:
                err_msg("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã!")

        if event == "–ù–∞–ø–∏—Å–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–º":
            if selected_numbers:
                print(selected_numbers)
            else:
                err_msg("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã!")

        if event == '–û—á–∏—Å—Ç–∏—Ç—å':
            window['name'].update('')
            window['phone'].update('')

    window.close()

def err_msg(text):
    # –ó–∞—Ç–µ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    layout = [
        [sg.Text(text), sg.Button('–°–º–∏—Ä–∏—Ç—å—Å—è')]
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', layout)

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read()

        if event in (sg.WINDOW_CLOSED, '–°–º–∏—Ä–∏—Ç—å—Å—è'):
            break
    window.close()

def menu_main():
    # –ó–∞—Ç–µ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    layout = [
        [sg.Button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏'), sg.Button('–ü–æ–ª—É—á–∏—Ç—å —Å–º—Å :(')],
        [sg.Button('–ú–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤'), sg.Button('–í—ã—Ö–æ–¥')],

    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', layout)

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read()

        if event in (sg.WINDOW_CLOSED, '–í—ã—Ö–æ–¥'):
            break
        if event == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–º—Å :(' or event == "–ü–æ–ª—É—á–∏—Ç—å —Å–º—Å :(":
            get_messages()
        if event == '–ú–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤':
            menu_contacts()
        if event == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
            sets()
    window.close()

def get_messages():
    # –ó–∞—Ç–µ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    layout = [
        [sg.Checkbox('–ü–æ–ª—É—á–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ', key='continuous_receive', enable_events=True)],
        [sg.Button('–ü–æ–ª—É—á–∏—Ç—å'), sg.Button('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'), sg.Button('–û—á–∏—Å—Ç–∏—Ç—å'), sg.Button('–í—ã—Ö–æ–¥')],
        [sg.Text('–í—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:')],
        [sg.Multiline(size=(60, 20), key='messages', autoscroll=True, reroute_stdout=True,
                     reroute_stderr=False, write_only=True, disabled=True)],
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π', layout)

    total_messages = ""

    # –§–ª–∞–≥ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è
    continuous = False

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read(timeout=1000 if continuous else None)  # —Ç–∞–π–º–∞—É—Ç 1 —Å–µ–∫—É–Ω–¥–∞ –ø—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º –ø–æ–ª—É—á–µ–Ω–∏–∏

        if event in (sg.WINDOW_CLOSED, '–í—ã—Ö–æ–¥'):
            break

        if event == 'continuous_receive':
            continuous = values['continuous_receive']
            
        if event == '–ü–æ–ª—É—á–∏—Ç—å':# or (continuous and event == sg.TIMEOUT_KEY)
            print("–ü–æ–ª—É—á–∞–µ–º —Å–º—Å...")
            log = read_sms_and_save(modem_port, contacts_file, output_file)
            if log != '':
                total_messages = f"{total_messages}{log}"
            window["messages"].update(total_messages)



        if event == '–û—á–∏—Å—Ç–∏—Ç—å':
            window['messages'].update('')
            
        if event == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
            print("–°–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

    window.close()

def menu_choose_contacts():
    # –ó–∞—Ç–µ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    layout = [
        [sg.Text('–ê—Ä–≥—É–º–µ–Ω—Ç—ã: '), sg.InputText(key='search', enable_events=True)],
        [sg.Button('–ü–æ–∏—Å–∫', bind_return_key=True), sg.Button('–û—Ç–º–µ–Ω–∞'), sg.Button('–û—á–∏—Å—Ç–∏—Ç—å')],
        [sg.Text('–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:')],
        [sg.Multiline(size=(56, 10), key='contacts', disabled=True)],
        [sg.Button('–ü—Ä–∏–º–µ–Ω–∏—Ç—å')]
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window = sg.Window('–ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', layout)

    # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    contacts_list = []

    # –¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
    while True:
        event, values = window.read()

        if event in (sg.WINDOW_CLOSED, '–û—Ç–º–µ–Ω–∞'):
            break

        if event == "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ" or event == "–ü–æ–∏—Å–∫":
            search = values['search']
            numbers = []
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            searched = search_contacts("Files/contacts.xlsx", search)
            contacts = searched[0]
            for el in searched[1]:
                numbers.append(str(el["number"]))

            window['contacts'].update('')
            complete = ""
            for contact in contacts:
                complete+=f"{contact}\n"
            window['contacts'].update(complete)

        if event == '–û—á–∏—Å—Ç–∏—Ç—å':
            window['contacts'].update('')
            window['search'].update('')
        if event == '–ü—Ä–∏–º–µ–Ω–∏—Ç—å':
            try:
                window.close()
                if numbers:
                    return numbers

            except Exception as e:
                err_msg(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ {e}")
            break


    window.close()

can_modem = False

if __name__ == "__main__":
    delete_contact(["+79875325498"])
    if modem_port != "COM":
        setup_modem(modem_port)
        can_modem = True
    print(menu_choose_contacts())
    menu_main()
